name: Deploy Azure Infrastructure and Node.js App

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: write
  repository-projects: write  # Add this permission
  packages: write


jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy SQL Infrastructure
      uses: azure/arm-deploy@v2
      with:
        resourceGroupName: abd-rg
        template: ./infrabicep/azsqldb.bicep
        parameters: dummySqlPassword='StrongP@ssword123'

    - name: Deploy Web App Infrastructure
      uses: azure/arm-deploy@v2
      with:
        resourceGroupName: abd-rg
        template: ./infrabicep/webapp.bicep
        failOnStdErr: false

    - name: Generate Connection String
      run: |
        CONNECTION_STRING="Server=tcp:abdsqlserver.database.windows.net,1433;Initial Catalog=abdsqldb;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=Active Directory Default;"
        echo "connection_string=$CONNECTION_STRING" >> "$GITHUB_ENV"
    
    
    - name: Store Connection String as GitHub Variable
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Or GH_PAT
      run: |
          sudo apt-get install -y jq
          JSON_PAYLOAD=$(jq -n \
            --arg name "AZURE_SQL_CONNECTION_STRING" \
            --arg value "${{ env.connection_string }}" \
            '{name: $name, value: $value}')
          echo "$JSON_PAYLOAD" | gh api --method POST "/repos/${{ github.repository }}/actions/variables" --input -

    - name: Set Connection String in Web App
      uses: azure/cli@v1
      with:
       inlineScript: |
            az webapp config appsettings set --name abdregapp --resource-group abd-rg --settings "AZURE_SQL_CONNECTION_STRING=${{ env.connection_string }}"
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: deploy-infra

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: 'abdregapp'
        package: ./release.zip
