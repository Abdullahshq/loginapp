name: Deploy Azure Infrastructure and Node.js App

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP_NAME: 'abd-rg'
  WEBAPP_NAME: 'abdregapp'
  SQL_SERVER_NAME: 'abdsqlserver'
  SQL_DATABASE_NAME: 'abdsqldb'
  LOCATION: 'centralus'
  CONNECTION_STRING: 'Server=tcp:${SQL_SERVER_NAME}.database.windows.net,1433;Initial Catalog=${SQL_DATABASE_NAME};Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=Active Directory Default;'
jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      uses: azure/cli@v1
      with:
        inlineScript: |
          az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.LOCATION }}

    - name: Deploy SQL Infrastructure
      uses: azure/arm-deploy@v2
      with:
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./infrabicep/azsqldb.bicep
        parameters: >-
          sqlServerName="${{ env.SQL_SERVER_NAME }}"
          sqlDatabaseName="${{ env.SQL_DATABASE_NAME }}"
          dummySqlPassword="StrongP@ssword123"
        failOnStdErr: false

    - name: Deploy Web App Infrastructure
      uses: azure/arm-deploy@v2
      with:
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./infrabicep/webapp.bicep
        parameters: >-
          webAppName="${{ env.WEBAPP_NAME }}"
        failOnStdErr: false


    # SOLUTION 1: Using az webapp config appsettings set with proper escaping
    - name: Set Connection String in Web App (Method 1)
      uses: azure/cli@v1
      with:
        inlineScript: |
          if [ -z "${CONNECTION_STRING}" ]; then
            echo "ERROR: CONNECTION_STRING is empty."
            exit 1
          fi

          echo "Setting AZURE_SQL_CONNECTION_STRING using method 1"

          # Method 1: Use --settings flag with proper escaping
          az webapp config appsettings set \
            --name ${{ env.WEBAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP_NAME }} \
            --settings "AZURE_SQL_CONNECTION_STRING=${CONNECTION_STRING}"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: deploy-infra

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Zip artifact for deployment
      run: zip release.zip ./* -r

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        package: ./release.zip